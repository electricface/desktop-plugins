// Generated by CoffeeScript 1.6.2
(function() {
  var $, $s, CityMoreMenu, ClientCityId, DEEPIN_ITEM_ID, Module, ToolTip, Weather, WeatherData, Widget, ajax, allname, apply_animation, apply_flash, apply_rotate, assert, bindtextdomain, build_menu, calc_text_size, cities, clamp, common_dists, common_dists_init, create_element, create_img, dnd_is_deepin_item, dnd_is_desktop, dnd_is_file, echo, find_drag_target, get_function_name, get_page_xy, get_path_base, get_path_name, plugin, remove_element, run_post, swap_element, tooltip_hide_id, _, _events,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Storage.prototype.setObject = function(key, value) {
    return this.setItem(key, JSON.stringify(value));
  };

  Storage.prototype.getObject = function(key) {
    return JSON.parse(this.getItem(key));
  };

  String.prototype.endsWith = function(suffix) {
    return this.indexOf(suffix, this.length - suffix.length) !== -1;
  };

  Array.prototype.remove = function(el) {
    var i;

    i = this.indexOf(el);
    if (i !== -1) {
      return this.splice(this.indexOf(el), 1)[0];
    }
  };

  String.prototype.args = function() {
    var i, len, o, _i;

    o = this;
    len = arguments.length;
    for (i = _i = 1; 1 <= len ? _i <= len : _i >= len; i = 1 <= len ? ++_i : --_i) {
      o = o.replace(new RegExp("%" + i, "g"), arguments[i - 1]);
    }
    return o;
  };

  echo = function(log) {
    return console.log(log);
  };

  assert = function(value, msg) {
    if (!value) {
      throw new Error(msg);
    }
  };

  _ = function(s, d) {
    if (d) {
      return DCore.dgettext(d, s);
    } else {
      return DCore.gettext(s);
    }
  };

  bindtextdomain = function(domain, locale_dir) {
    return DCore.bindtextdomain(domain, locale_dir);
  };

  build_menu = function(info) {
    var i, m, sm, v, _i, _len;

    m = new DeepinMenu;
    for (_i = 0, _len = info.length; _i < _len; _i++) {
      v = info[_i];
      if (v.length === 0) {
        i = new DeepinMenuItem(2, 0, 0, 0);
      } else if (typeof v[0] === "number") {
        i = new DeepinMenuItem(0, v[0], v[1], null);
        if (v.length > 2 && v[2] === false) {
          i.enabled = false;
        } else {
          i.enabled = true;
        }
      } else {
        sm = build_menu(v[1]);
        i = new DeepinMenuItem(1, 0, v[0], sm);
      }
      m.appendItem(i);
    }
    return m;
  };

  get_page_xy = function(el, x, y) {
    var p;

    return p = webkitConvertPointFromNodeToPage(el, new WebKitPoint(x, y));
  };

  find_drag_target = function(el) {
    var p;

    p = el;
    if (p.draggable) {
      return p;
    }
    while (p = el.parentNode) {
      if (p.draggable) {
        return p;
      }
    }
    return null;
  };

  swap_element = function(c1, c2) {
    var tmp;

    if (c1.parentNode === c2.parentNode) {
      tmp = document.createElement('div');
      c1.parentNode.insertBefore(tmp, c1);
      c2.parentNode.insertBefore(c1, c2);
      tmp.parentNode.insertBefore(c2, tmp);
      return tmp.parentNode.removeChild(tmp);
    }
  };

  document.body.ondrop = function(e) {
    return e.preventDefault();
  };

  run_post = function(f, self) {
    var f2;

    f2 = f.bind(self || this);
    return setTimeout(f2, 0);
  };

  create_element = function(type, clss, parent) {
    var el;

    el = document.createElement(type);
    if (clss) {
      el.setAttribute("class", clss);
    }
    if (parent) {
      parent.appendChild(el);
    }
    return el;
  };

  create_img = function(clss, src, parent) {
    var el;

    el = create_element('img', clss, parent);
    el.src = src;
    el.draggable = false;
    return el;
  };

  calc_text_size = function(txt, width) {
    var h, tmp;

    tmp = create_element('div', 'hidden_calc_text', document.body);
    tmp.innerText = txt;
    tmp.style.width = "" + width + "px";
    h = tmp.clientHeight;
    document.body.removeChild(tmp);
    return h;
  };

  clamp = function(value, min, max) {
    if (value < min) {
      return min;
    }
    if (value > max) {
      return max;
    }
    return value;
  };

  get_function_name = function() {
    if (!arguments.caller) {
      return "AnymouseFunction";
    }
    return /function (.*?)\(/.exec(arguments.caller.toString())[1];
  };

  DEEPIN_ITEM_ID = "deepin-item-id";

  dnd_is_desktop = function(e) {
    return e.dataTransfer.getData("text/uri-list").trim().endsWith(".desktop");
  };

  dnd_is_deepin_item = function(e) {
    if (e.dataTransfer.getData(DEEPIN_ITEM_ID)) {
      return true;
    } else {
      return false;
    }
  };

  dnd_is_file = function(e) {
    return e.dataTransfer.getData("text/uri-list").length !== 0;
  };

  ajax = function(url, callback, callback_error) {
    var xhr;

    xhr = new XMLHttpRequest();
    xhr.open("GET", url, true);
    xhr.onload = function() {
      echo("XMLHttpRequest onload");
      if (typeof callback === "function") {
        callback(xhr);
      }
    };
    xhr.onerror = function() {
      echo("XMLHttpRequest onerror");
      return typeof callback_error === "function" ? callback_error(xhr) : void 0;
    };
    return xhr.send(null);
  };

  get_path_base = function(path) {
    return path.split('/').slice(0, -1).join('/');
  };

  get_path_name = function(path) {
    var dot_pos;

    dot_pos = path.lastIndexOf('.');
    if (dot_pos === -1) {
      return path.substring(path.lastIndexOf('/') + 1);
    } else {
      return path.substring(path.lastIndexOf('/') + 1, dot_pos);
    }
  };

  remove_element = function(obj) {
    if (obj) {
      return obj.parentNode.removeChild(obj);
    }
  };

  apply_animation = function(el, name, duration, timefunc) {
    el.style.webkitAnimationName = name;
    el.style.webkitAnimationDuration = duration;
    return el.style.webkitAnimationTimingFunction = timefunc || "linear";
  };

  apply_rotate = function(el, time) {
    var id;

    apply_animation(el, "rotate", "" + time + "s", "cubic-bezier(0, 0, 0.35, -1)");
    return id = setTimeout(function() {
      el.style.webkitAnimation = "";
      return clearTimeout(id);
    }, time * 1000);
  };

  apply_flash = function(el, time) {
    var id;

    apply_animation(el, "flash", "" + time + "s", "cubic-bezier(0, 0, 0.35, -1)");
    return id = setTimeout(function() {
      el.style.webkitAnimation = "";
      return clearTimeout(id);
    }, time * 1000);
  };

  Module = (function() {
    var moduleKeywords;

    function Module() {}

    moduleKeywords = ['extended', 'included'];

    Module.extended = function(obj) {
      var key, value, _ref;

      for (key in obj) {
        value = obj[key];
        if (__indexOf.call(moduleKeywords, key) < 0) {
          this[key] = value;
        }
      }
      if ((_ref = obj.extended) != null) {
        _ref.apply(this);
      }
      return this;
    };

    Module.included = function(obj, parms) {
      var key, value, _ref, _ref1;

      for (key in obj) {
        value = obj[key];
        if (__indexOf.call(moduleKeywords, key) < 0) {
          this.prototype[key] = value;
        }
      }
      if ((_ref = obj.included) != null) {
        _ref.apply(this);
      }
      return (_ref1 = obj.__init__) != null ? _ref1.call(this, parms) : void 0;
    };

    return Module;

  })();

  _events = ['blur', 'change', 'click', 'contextmenu', 'buildmenu', 'rightclick', 'copy', 'cut', 'dblclick', 'error', 'focus', 'keydown', 'keypress', 'keyup', 'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'mousewheel', 'paste', 'reset', 'resize', 'scroll', 'select', 'submit', 'DOMActivate', 'DOMAttrModified', 'DOMCharacterDataModified', 'DOMFocusIn', 'DOMFocusOut', 'DOMMouseScroll', 'DOMNodeInserted', 'DOMNodeRemoved', 'DOMSubtreeModified', 'textInput', 'dragstart', 'dragend', 'dragover', 'drag', 'drop', 'dragenter', 'dragleave', 'itemselected', 'webkitTransitionEnd'];

  Widget = (function(_super) {
    __extends(Widget, _super);

    Widget.object_table = {};

    Widget.look_up = function(id) {
      return this.object_table[id];
    };

    function Widget() {
      var el, f_menu, f_rclick, k, key, v, _ref,
        _this = this;

      el = document.createElement('div');
      el.setAttribute('class', this.constructor.name);
      if (this.id) {
        el.id = this.id;
        Widget.object_table[this.id] = this;
      }
      this.element = el;
      f_menu = null;
      f_rclick = null;
      _ref = this.constructor.prototype;
      for (k in _ref) {
        v = _ref[k];
        if (!(k.search("do_") === 0)) {
          continue;
        }
        key = k.substr(3);
        if (__indexOf.call(_events, key) >= 0) {
          if (key === "rightclick") {
            f_rclick = v.bind(this);
          } else if (key === "buildmenu") {
            f_menu = v.bind(this);
          } else if (key === "contextmenu") {
            "nothing should do";
          } else {
            this.element.addEventListener(key, v.bind(this));
          }
        } else {
          echo("found the do_ prefix but the name " + key + " is not an dom events");
        }
      }
      this.element.addEventListener("contextmenu", function(e) {
        if (f_rclick) {
          f_rclick(e);
        }
        if (f_menu) {
          _this.element.contextMenu = build_menu(f_menu());
          return e.stopPropagation();
        }
      });
    }

    Widget.prototype.destroy = function() {
      var _ref;

      if ((_ref = this.element.parentElement) != null) {
        _ref.removeChild(this.element);
      }
      return delete Widget.object_table[this.id];
    };

    Widget.prototype.add_css_class = function(name, el) {
      if (!el) {
        el = this.element;
      }
      return el.classList.add(name);
    };

    Widget.prototype.remove_css_class = function(name, el) {
      if (!el) {
        el = this.element;
      }
      return el.classList.remove(name);
    };

    return Widget;

  })(Module);

  $ = function(q, o) {
    var _ref;

    return (_ref = $s(q, o)) != null ? _ref[0] : void 0;
  };

  $s = function(q, o) {
    var div, selector;

    if (typeof q !== 'string') {
      div = q;
      selector = o;
    } else {
      div = document;
      selector = q;
    }
    switch (selector.charAt(0)) {
      case '#':
        return [div.getElementById(selector.substr(1))];
      case '.':
        return div.getElementsByClassName(selector.substr(1));
      default:
        return div.getElementsByTagName(selector);
    }
  };

  tooltip_hide_id = null;

  ToolTip = (function(_super) {
    __extends(ToolTip, _super);

    ToolTip.tooltip = null;

    ToolTip.should_show_id = -1;

    function ToolTip(element, text, parent) {
      var _ref,
        _this = this;

      this.element = element;
      this.text = text;
      this.parent = parent != null ? parent : document.body;
      if ((_ref = ToolTip.tooltip) == null) {
        ToolTip.tooltip = create_element("div", "tooltip", this.parent);
      }
      this.event_bind('dragstart', function() {
        return _this.hide();
      });
      this.event_bind('dragenter', function() {
        return _this.hide();
      });
      this.event_bind('dragover', function() {
        return _this.hide();
      });
      this.event_bind('dragleave', function() {
        return _this.hide();
      });
      this.event_bind('dragend', function() {
        return _this.hide();
      });
      this.event_bind('contextmenu', function() {
        return _this.hide();
      });
      this.event_bind('mouseout', function() {
        return _this.hide();
      });
      this.event_bind('mouseover', function() {
        return ToolTip.should_show_id = setTimeout(function() {
          return _this.show();
        }, 500);
      });
      this.event_bind('click', function() {
        return _this.hide();
      });
    }

    ToolTip.prototype.event_bind = function(evt_name, callback) {
      return this.element.addEventListener(evt_name, function(e) {
        return callback();
      });
    };

    ToolTip.prototype.show = function() {
      ToolTip.tooltip.innerText = this.text;
      ToolTip.tooltip.style.display = "block";
      return this._move_tooltip();
    };

    ToolTip.prototype.hide = function() {
      var _ref;

      clearTimeout(ToolTip.should_show_id);
      return (_ref = ToolTip.tooltip) != null ? _ref.style.display = "none" : void 0;
    };

    ToolTip.move_to = function(self, x, y) {
      if (y <= 0) {
        self.hide();
        return;
      }
      ToolTip.tooltip.style.left = "" + x + "px";
      return ToolTip.tooltip.style.bottom = "" + y + "px";
    };

    ToolTip.prototype._move_tooltip = function() {
      var offset, page_xy, x;

      page_xy = get_page_xy(this.element, 0, 0);
      offset = (this.element.clientWidth - ToolTip.tooltip.clientWidth) / 2;
      x = page_xy.x + offset + 4;
      if (x < 0) {
        x = 0;
      }
      return ToolTip.move_to(this, x.toFixed(), document.body.clientHeight - page_xy.y);
    };

    return ToolTip;

  })(Widget);

  common_dists = [
    {
      "name": "",
      "id": ""
    }, {
      "name": "",
      "id": ""
    }, {
      "name": "",
      "id": ""
    }, {
      "name": "",
      "id": ""
    }, {
      "name": "",
      "id": ""
    }
  ];

  common_dists_init = [
    {
      "name": "",
      "id": ""
    }, {
      "name": "",
      "id": ""
    }, {
      "name": "",
      "id": ""
    }, {
      "name": "",
      "id": ""
    }, {
      "name": "",
      "id": ""
    }
  ];

  cities = [
    {
      "id": "01",
      "name": "北京"
    }, {
      "id": "02",
      "name": "上海"
    }, {
      "id": "03",
      "name": "天津"
    }, {
      "id": "04",
      "name": "重庆"
    }, {
      "id": "05",
      "name": "黑龙江"
    }, {
      "id": "06",
      "name": "吉林"
    }, {
      "id": "07",
      "name": "辽宁"
    }, {
      "id": "08",
      "name": "内蒙古"
    }, {
      "id": "09",
      "name": "河北"
    }, {
      "id": "10",
      "name": "山西"
    }, {
      "id": "11",
      "name": "陕西"
    }, {
      "id": "12",
      "name": "山东"
    }, {
      "id": "13",
      "name": "新疆"
    }, {
      "id": "14",
      "name": "西藏"
    }, {
      "id": "15",
      "name": "青海"
    }, {
      "id": "16",
      "name": "甘肃"
    }, {
      "id": "17",
      "name": "宁夏"
    }, {
      "id": "18",
      "name": "河南"
    }, {
      "id": "19",
      "name": "江苏"
    }, {
      "id": "20",
      "name": "湖北"
    }, {
      "id": "21",
      "name": "浙江"
    }, {
      "id": "22",
      "name": "安徽"
    }, {
      "id": "23",
      "name": "福建"
    }, {
      "id": "24",
      "name": "江西"
    }, {
      "id": "25",
      "name": "湖南"
    }, {
      "id": "26",
      "name": "贵州"
    }, {
      "id": "27",
      "name": "四川"
    }, {
      "id": "28",
      "name": "广东"
    }, {
      "id": "29",
      "name": "云南"
    }, {
      "id": "30",
      "name": "广西"
    }, {
      "id": "31",
      "name": "海南"
    }, {
      "id": "32",
      "name": "香港"
    }, {
      "id": "33",
      "name": "澳门"
    }, {
      "id": "34",
      "name": "台湾"
    }
  ];

  allname = {
    "data": [
      {
        "prov": "澳门",
        "city": [
          {
            "cityname": "澳门",
            "code": "101330101"
          }
        ]
      }, {
        "prov": "香港",
        "city": [
          {
            "cityname": "香港",
            "code": "101320101"
          }
        ]
      }, {
        "prov": "台湾",
        "city": [
          {
            "cityname": "台北",
            "code": "101340102"
          }, {
            "cityname": "高雄",
            "code": "101340201"
          }
        ]
      }, {
        "prov": "北京",
        "city": [
          {
            "cityname": "北京",
            "code": "101010100"
          }, {
            "cityname": "朝阳",
            "code": "101010300"
          }, {
            "cityname": "顺义",
            "code": "101010400"
          }, {
            "cityname": "怀柔",
            "code": "101010500"
          }, {
            "cityname": "通州",
            "code": "101010600"
          }, {
            "cityname": "昌平",
            "code": "101010700"
          }, {
            "cityname": "延庆",
            "code": "101010800"
          }, {
            "cityname": "丰台",
            "code": "101010900"
          }, {
            "cityname": "石景山",
            "code": "101011000"
          }, {
            "cityname": "大兴",
            "code": "101011100"
          }, {
            "cityname": "房山",
            "code": "101011200"
          }, {
            "cityname": "密云",
            "code": "101011300"
          }, {
            "cityname": "门头沟",
            "code": "101011400"
          }, {
            "cityname": "平谷",
            "code": "101011500"
          }, {
            "cityname": "八达岭",
            "code": "101011600"
          }, {
            "cityname": "佛爷顶",
            "code": "101011700"
          }, {
            "cityname": "汤河口",
            "code": "101011800"
          }, {
            "cityname": "密云上甸子",
            "code": "101011900"
          }, {
            "cityname": "斋堂",
            "code": "101012000"
          }, {
            "cityname": "霞云岭",
            "code": "101012100"
          }, {
            "cityname": "北京城区",
            "code": "101012200"
          }, {
            "cityname": "海淀",
            "code": "101010200"
          }
        ]
      }, {
        "prov": "天津",
        "city": [
          {
            "cityname": "天津",
            "code": "101030100"
          }, {
            "cityname": "宝坻",
            "code": "101030300"
          }, {
            "cityname": "东丽",
            "code": "101030400"
          }, {
            "cityname": "西青",
            "code": "101030500"
          }, {
            "cityname": "北辰",
            "code": "101030600"
          }, {
            "cityname": "蓟县",
            "code": "101031400"
          }, {
            "cityname": "汉沽",
            "code": "101030800"
          }, {
            "cityname": "静海",
            "code": "101030900"
          }, {
            "cityname": "津南",
            "code": "101031000"
          }, {
            "cityname": "塘沽",
            "code": "101031100"
          }, {
            "cityname": "大港",
            "code": "101031200"
          }, {
            "cityname": "武清",
            "code": "101030200"
          }, {
            "cityname": "宁河",
            "code": "101030700"
          }
        ]
      }, {
        "prov": "上海",
        "city": [
          {
            "cityname": "上海",
            "code": "101020100"
          }, {
            "cityname": "宝山",
            "code": "101020300"
          }, {
            "cityname": "嘉定",
            "code": "101020500"
          }, {
            "cityname": "南汇",
            "code": "101020600"
          }, {
            "cityname": "浦东",
            "code": "101021300"
          }, {
            "cityname": "青浦",
            "code": "101020800"
          }, {
            "cityname": "松江",
            "code": "101020900"
          }, {
            "cityname": "奉贤",
            "code": "101021000"
          }, {
            "cityname": "崇明",
            "code": "101021100"
          }, {
            "cityname": "徐家汇",
            "code": "101021200"
          }, {
            "cityname": "闵行",
            "code": "101020200"
          }, {
            "cityname": "金山",
            "code": "101020700"
          }
        ]
      }, {
        "prov": "河北",
        "city": [
          {
            "cityname": "石家庄",
            "code": "101090101"
          }, {
            "cityname": "张家口",
            "code": "101090301"
          }, {
            "cityname": "承德",
            "code": "101090402"
          }, {
            "cityname": "唐山",
            "code": "101090501"
          }, {
            "cityname": "秦皇岛",
            "code": "101091101"
          }, {
            "cityname": "沧州",
            "code": "101090701"
          }, {
            "cityname": "衡水",
            "code": "101090801"
          }, {
            "cityname": "邢台",
            "code": "101090901"
          }, {
            "cityname": "邯郸",
            "code": "101091001"
          }, {
            "cityname": "保定",
            "code": "101090201"
          }, {
            "cityname": "廊坊",
            "code": "101090601"
          }
        ]
      }, {
        "prov": "河南",
        "city": [
          {
            "cityname": "郑州",
            "code": "101180101"
          }, {
            "cityname": "新乡",
            "code": "101180301"
          }, {
            "cityname": "许昌",
            "code": "101180401"
          }, {
            "cityname": "平顶山",
            "code": "101180501"
          }, {
            "cityname": "信阳",
            "code": "101180601"
          }, {
            "cityname": "南阳",
            "code": "101180701"
          }, {
            "cityname": "开封",
            "code": "101180801"
          }, {
            "cityname": "洛阳",
            "code": "101180901"
          }, {
            "cityname": "商丘",
            "code": "101181001"
          }, {
            "cityname": "焦作",
            "code": "101181101"
          }, {
            "cityname": "鹤壁",
            "code": "101181201"
          }, {
            "cityname": "濮阳",
            "code": "101181301"
          }, {
            "cityname": "周口",
            "code": "101181401"
          }, {
            "cityname": "漯河",
            "code": "101181501"
          }, {
            "cityname": "驻马店",
            "code": "101181601"
          }, {
            "cityname": "三门峡",
            "code": "101181701"
          }, {
            "cityname": "济源",
            "code": "101181801"
          }, {
            "cityname": "安阳",
            "code": "101180201"
          }
        ]
      }, {
        "prov": "安徽",
        "city": [
          {
            "cityname": "合肥",
            "code": "101220101"
          }, {
            "cityname": "芜湖",
            "code": "101220301"
          }, {
            "cityname": "淮南",
            "code": "101220401"
          }, {
            "cityname": "马鞍山",
            "code": "101220501"
          }, {
            "cityname": "安庆",
            "code": "101220601"
          }, {
            "cityname": "宿州",
            "code": "101220701"
          }, {
            "cityname": "阜阳",
            "code": "101220801"
          }, {
            "cityname": "亳州",
            "code": "101220901"
          }, {
            "cityname": "黄山",
            "code": "101221001"
          }, {
            "cityname": "滁州",
            "code": "101221101"
          }, {
            "cityname": "淮北",
            "code": "101221201"
          }, {
            "cityname": "铜陵",
            "code": "101221301"
          }, {
            "cityname": "宣城",
            "code": "101221401"
          }, {
            "cityname": "六安",
            "code": "101221501"
          }, {
            "cityname": "巢湖",
            "code": "101221601"
          }, {
            "cityname": "池州",
            "code": "101221701"
          }, {
            "cityname": "蚌埠",
            "code": "101220201"
          }
        ]
      }, {
        "prov": "浙江",
        "city": [
          {
            "cityname": "杭州",
            "code": "101210101"
          }, {
            "cityname": "舟山",
            "code": "101211101"
          }, {
            "cityname": "湖州",
            "code": "101210201"
          }, {
            "cityname": "嘉兴",
            "code": "101210301"
          }, {
            "cityname": "金华",
            "code": "101210901"
          }, {
            "cityname": "绍兴",
            "code": "101210501"
          }, {
            "cityname": "台州",
            "code": "101210601"
          }, {
            "cityname": "温州",
            "code": "101210701"
          }, {
            "cityname": "丽水",
            "code": "101210801"
          }, {
            "cityname": "衢州",
            "code": "101211001"
          }, {
            "cityname": "宁波",
            "code": "101210401"
          }
        ]
      }, {
        "prov": "重庆",
        "city": [
          {
            "cityname": "重庆",
            "code": "101040100"
          }, {
            "cityname": "合川",
            "code": "101040300"
          }, {
            "cityname": "南川",
            "code": "101040400"
          }, {
            "cityname": "江津",
            "code": "101040500"
          }, {
            "cityname": "万盛",
            "code": "101040600"
          }, {
            "cityname": "渝北",
            "code": "101040700"
          }, {
            "cityname": "北碚",
            "code": "101040800"
          }, {
            "cityname": "巴南",
            "code": "101040900"
          }, {
            "cityname": "长寿",
            "code": "101041000"
          }, {
            "cityname": "黔江",
            "code": "101041100"
          }, {
            "cityname": "万州天城",
            "code": "101041200"
          }, {
            "cityname": "万州龙宝",
            "code": "101041300"
          }, {
            "cityname": "涪陵",
            "code": "101041400"
          }, {
            "cityname": "开县",
            "code": "101041500"
          }, {
            "cityname": "城口",
            "code": "101041600"
          }, {
            "cityname": "云阳",
            "code": "101041700"
          }, {
            "cityname": "巫溪",
            "code": "101041800"
          }, {
            "cityname": "奉节",
            "code": "101041900"
          }, {
            "cityname": "巫山",
            "code": "101042000"
          }, {
            "cityname": "潼南",
            "code": "101042100"
          }, {
            "cityname": "垫江",
            "code": "101042200"
          }, {
            "cityname": "梁平",
            "code": "101042300"
          }, {
            "cityname": "忠县",
            "code": "101042400"
          }, {
            "cityname": "石柱",
            "code": "101042500"
          }, {
            "cityname": "大足",
            "code": "101042600"
          }, {
            "cityname": "荣昌",
            "code": "101042700"
          }, {
            "cityname": "铜梁",
            "code": "101042800"
          }, {
            "cityname": "璧山",
            "code": "101042900"
          }, {
            "cityname": "丰都",
            "code": "101043000"
          }, {
            "cityname": "武隆",
            "code": "101043100"
          }, {
            "cityname": "彭水",
            "code": "101043200"
          }, {
            "cityname": "綦江",
            "code": "101043300"
          }, {
            "cityname": "酉阳",
            "code": "101043400"
          }, {
            "cityname": "秀山",
            "code": "101043600"
          }, {
            "cityname": "沙坪坝",
            "code": "101043700"
          }, {
            "cityname": "永川",
            "code": "101040200"
          }
        ]
      }, {
        "prov": "福建",
        "city": [
          {
            "cityname": "福州",
            "code": "101230101"
          }, {
            "cityname": "泉州",
            "code": "101230501"
          }, {
            "cityname": "漳州",
            "code": "101230601"
          }, {
            "cityname": "龙岩",
            "code": "101230701"
          }, {
            "cityname": "晋江",
            "code": "101230509"
          }, {
            "cityname": "南平",
            "code": "101230901"
          }, {
            "cityname": "厦门",
            "code": "101230201"
          }, {
            "cityname": "宁德",
            "code": "101230301"
          }, {
            "cityname": "莆田",
            "code": "101230401"
          }, {
            "cityname": "三明",
            "code": "101230801"
          }
        ]
      }, {
        "prov": "甘肃",
        "city": [
          {
            "cityname": "兰州",
            "code": "101160101"
          }, {
            "cityname": "平凉",
            "code": "101160301"
          }, {
            "cityname": "庆阳",
            "code": "101160401"
          }, {
            "cityname": "武威",
            "code": "101160501"
          }, {
            "cityname": "金昌",
            "code": "101160601"
          }, {
            "cityname": "嘉峪关",
            "code": "101161401"
          }, {
            "cityname": "酒泉",
            "code": "101160801"
          }, {
            "cityname": "天水",
            "code": "101160901"
          }, {
            "cityname": "武都",
            "code": "101161001"
          }, {
            "cityname": "临夏",
            "code": "101161101"
          }, {
            "cityname": "合作",
            "code": "101161201"
          }, {
            "cityname": "白银",
            "code": "101161301"
          }, {
            "cityname": "定西",
            "code": "101160201"
          }, {
            "cityname": "张掖",
            "code": "101160701"
          }
        ]
      }, {
        "prov": "广东",
        "city": [
          {
            "cityname": "广州",
            "code": "101280101"
          }, {
            "cityname": "惠州",
            "code": "101280301"
          }, {
            "cityname": "梅州",
            "code": "101280401"
          }, {
            "cityname": "汕头",
            "code": "101280501"
          }, {
            "cityname": "深圳",
            "code": "101280601"
          }, {
            "cityname": "珠海",
            "code": "101280701"
          }, {
            "cityname": "佛山",
            "code": "101280800"
          }, {
            "cityname": "肇庆",
            "code": "101280901"
          }, {
            "cityname": "湛江",
            "code": "101281001"
          }, {
            "cityname": "江门",
            "code": "101281101"
          }, {
            "cityname": "河源",
            "code": "101281201"
          }, {
            "cityname": "清远",
            "code": "101281301"
          }, {
            "cityname": "云浮",
            "code": "101281401"
          }, {
            "cityname": "潮州",
            "code": "101281501"
          }, {
            "cityname": "东莞",
            "code": "101281601"
          }, {
            "cityname": "中山",
            "code": "101281701"
          }, {
            "cityname": "阳江",
            "code": "101281801"
          }, {
            "cityname": "揭阳",
            "code": "101281901"
          }, {
            "cityname": "茂名",
            "code": "101282001"
          }, {
            "cityname": "汕尾",
            "code": "101282101"
          }, {
            "cityname": "韶关",
            "code": "101280201"
          }
        ]
      }, {
        "prov": "广西",
        "city": [
          {
            "cityname": "南宁",
            "code": "101300101"
          }, {
            "cityname": "柳州",
            "code": "101300301"
          }, {
            "cityname": "来宾",
            "code": "101300401"
          }, {
            "cityname": "桂林",
            "code": "101300501"
          }, {
            "cityname": "梧州",
            "code": "101300601"
          }, {
            "cityname": "防城港",
            "code": "101301401"
          }, {
            "cityname": "贵港",
            "code": "101300801"
          }, {
            "cityname": "玉林",
            "code": "101300901"
          }, {
            "cityname": "百色",
            "code": "101301001"
          }, {
            "cityname": "钦州",
            "code": "101301101"
          }, {
            "cityname": "河池",
            "code": "101301201"
          }, {
            "cityname": "北海",
            "code": "101301301"
          }, {
            "cityname": "崇左",
            "code": "101300201"
          }, {
            "cityname": "贺州",
            "code": "101300701"
          }
        ]
      }, {
        "prov": "贵州",
        "city": [
          {
            "cityname": "贵阳",
            "code": "101260101"
          }, {
            "cityname": "安顺",
            "code": "101260301"
          }, {
            "cityname": "都匀",
            "code": "101260401"
          }, {
            "cityname": "兴义",
            "code": "101260906"
          }, {
            "cityname": "铜仁",
            "code": "101260601"
          }, {
            "cityname": "毕节",
            "code": "101260701"
          }, {
            "cityname": "六盘水",
            "code": "101260801"
          }, {
            "cityname": "遵义",
            "code": "101260201"
          }, {
            "cityname": "凯里",
            "code": "101260501"
          }
        ]
      }, {
        "prov": "云南",
        "city": [
          {
            "cityname": "昆明",
            "code": "101290101"
          }, {
            "cityname": "红河",
            "code": "101290301"
          }, {
            "cityname": "文山",
            "code": "101290601"
          }, {
            "cityname": "玉溪",
            "code": "101290701"
          }, {
            "cityname": "楚雄",
            "code": "101290801"
          }, {
            "cityname": "普洱",
            "code": "101290901"
          }, {
            "cityname": "昭通",
            "code": "101291001"
          }, {
            "cityname": "临沧",
            "code": "101291101"
          }, {
            "cityname": "怒江",
            "code": "101291201"
          }, {
            "cityname": "香格里拉",
            "code": "101291301"
          }, {
            "cityname": "丽江",
            "code": "101291401"
          }, {
            "cityname": "德宏",
            "code": "101291501"
          }, {
            "cityname": "景洪",
            "code": "101291601"
          }, {
            "cityname": "大理",
            "code": "101290201"
          }, {
            "cityname": "曲靖",
            "code": "101290401"
          }, {
            "cityname": "保山",
            "code": "101290501"
          }
        ]
      }, {
        "prov": "内蒙古",
        "city": [
          {
            "cityname": "呼和浩特",
            "code": "101080101"
          }, {
            "cityname": "乌海",
            "code": "101080301"
          }, {
            "cityname": "集宁",
            "code": "101080401"
          }, {
            "cityname": "通辽",
            "code": "101080501"
          }, {
            "cityname": "阿拉善左旗",
            "code": "101081201"
          }, {
            "cityname": "鄂尔多斯",
            "code": "101080701"
          }, {
            "cityname": "临河",
            "code": "101080801"
          }, {
            "cityname": "锡林浩特",
            "code": "101080901"
          }, {
            "cityname": "呼伦贝尔",
            "code": "101081000"
          }, {
            "cityname": "乌兰浩特",
            "code": "101081101"
          }, {
            "cityname": "包头",
            "code": "101080201"
          }, {
            "cityname": "赤峰",
            "code": "101080601"
          }
        ]
      }, {
        "prov": "江西",
        "city": [
          {
            "cityname": "南昌",
            "code": "101240101"
          }, {
            "cityname": "上饶",
            "code": "101240301"
          }, {
            "cityname": "抚州",
            "code": "101240401"
          }, {
            "cityname": "宜春",
            "code": "101240501"
          }, {
            "cityname": "鹰潭",
            "code": "101241101"
          }, {
            "cityname": "赣州",
            "code": "101240701"
          }, {
            "cityname": "景德镇",
            "code": "101240801"
          }, {
            "cityname": "萍乡",
            "code": "101240901"
          }, {
            "cityname": "新余",
            "code": "101241001"
          }, {
            "cityname": "九江",
            "code": "101240201"
          }, {
            "cityname": "吉安",
            "code": "101240601"
          }
        ]
      }, {
        "prov": "湖北",
        "city": [
          {
            "cityname": "武汉",
            "code": "101200101"
          }, {
            "cityname": "黄冈",
            "code": "101200501"
          }, {
            "cityname": "荆州",
            "code": "101200801"
          }, {
            "cityname": "宜昌",
            "code": "101200901"
          }, {
            "cityname": "恩施",
            "code": "101201001"
          }, {
            "cityname": "十堰",
            "code": "101201101"
          }, {
            "cityname": "神农架",
            "code": "101201201"
          }, {
            "cityname": "随州",
            "code": "101201301"
          }, {
            "cityname": "荆门",
            "code": "101201401"
          }, {
            "cityname": "天门",
            "code": "101201501"
          }, {
            "cityname": "仙桃",
            "code": "101201601"
          }, {
            "cityname": "潜江",
            "code": "101201701"
          }, {
            "cityname": "襄樊",
            "code": "101200201"
          }, {
            "cityname": "鄂州",
            "code": "101200301"
          }, {
            "cityname": "孝感",
            "code": "101200401"
          }, {
            "cityname": "黄石",
            "code": "101200601"
          }, {
            "cityname": "咸宁",
            "code": "101200701"
          }
        ]
      }, {
        "prov": "四川",
        "city": [
          {
            "cityname": "成都",
            "code": "101270101"
          }, {
            "cityname": "自贡",
            "code": "101270301"
          }, {
            "cityname": "绵阳",
            "code": "101270401"
          }, {
            "cityname": "南充",
            "code": "101270501"
          }, {
            "cityname": "达州",
            "code": "101270601"
          }, {
            "cityname": "遂宁",
            "code": "101270701"
          }, {
            "cityname": "广安",
            "code": "101270801"
          }, {
            "cityname": "巴中",
            "code": "101270901"
          }, {
            "cityname": "泸州",
            "code": "101271001"
          }, {
            "cityname": "宜宾",
            "code": "101271101"
          }, {
            "cityname": "内江",
            "code": "101271201"
          }, {
            "cityname": "资阳",
            "code": "101271301"
          }, {
            "cityname": "乐山",
            "code": "101271401"
          }, {
            "cityname": "眉山",
            "code": "101271501"
          }, {
            "cityname": "凉山",
            "code": "101271601"
          }, {
            "cityname": "雅安",
            "code": "101271701"
          }, {
            "cityname": "甘孜",
            "code": "101271801"
          }, {
            "cityname": "阿坝",
            "code": "101271901"
          }, {
            "cityname": "德阳",
            "code": "101272001"
          }, {
            "cityname": "广元",
            "code": "101272101"
          }, {
            "cityname": "攀枝花",
            "code": "101270201"
          }
        ]
      }, {
        "prov": "宁夏",
        "city": [
          {
            "cityname": "银川",
            "code": "101170101"
          }, {
            "cityname": "中卫",
            "code": "101170501"
          }, {
            "cityname": "固原",
            "code": "101170401"
          }, {
            "cityname": "石嘴山",
            "code": "101170201"
          }, {
            "cityname": "吴忠",
            "code": "101170301"
          }
        ]
      }, {
        "prov": "青海prov",
        "city": [
          {
            "cityname": "西宁",
            "code": "101150101"
          }, {
            "cityname": "黄南",
            "code": "101150301"
          }, {
            "cityname": "海北",
            "code": "101150801"
          }, {
            "cityname": "果洛",
            "code": "101150501"
          }, {
            "cityname": "玉树",
            "code": "101150601"
          }, {
            "cityname": "海西",
            "code": "101150701"
          }, {
            "cityname": "海东",
            "code": "101150201"
          }, {
            "cityname": "海南",
            "code": "101150401"
          }
        ]
      }, {
        "prov": "山东",
        "city": [
          {
            "cityname": "济南",
            "code": "101120101"
          }, {
            "cityname": "潍坊",
            "code": "101120601"
          }, {
            "cityname": "临沂",
            "code": "101120901"
          }, {
            "cityname": "菏泽",
            "code": "101121001"
          }, {
            "cityname": "滨州",
            "code": "101121101"
          }, {
            "cityname": "东营",
            "code": "101121201"
          }, {
            "cityname": "威海",
            "code": "101121301"
          }, {
            "cityname": "枣庄",
            "code": "101121401"
          }, {
            "cityname": "日照",
            "code": "101121501"
          }, {
            "cityname": "莱芜",
            "code": "101121601"
          }, {
            "cityname": "聊城",
            "code": "101121701"
          }, {
            "cityname": "青岛",
            "code": "101120201"
          }, {
            "cityname": "淄博",
            "code": "101120301"
          }, {
            "cityname": "德州",
            "code": "101120401"
          }, {
            "cityname": "烟台",
            "code": "101120501"
          }, {
            "cityname": "济宁",
            "code": "101120701"
          }, {
            "cityname": "泰安",
            "code": "101120801"
          }
        ]
      }, {
        "prov": "陕西prov",
        "city": [
          {
            "cityname": "西安",
            "code": "101110101"
          }, {
            "cityname": "延安",
            "code": "101110300"
          }, {
            "cityname": "榆林",
            "code": "101110401"
          }, {
            "cityname": "铜川",
            "code": "101111001"
          }, {
            "cityname": "商洛",
            "code": "101110601"
          }, {
            "cityname": "安康",
            "code": "101110701"
          }, {
            "cityname": "汉中",
            "code": "101110801"
          }, {
            "cityname": "宝鸡",
            "code": "101110901"
          }, {
            "cityname": "咸阳",
            "code": "101110200"
          }, {
            "cityname": "渭南",
            "code": "101110501"
          }
        ]
      }, {
        "prov": "山西",
        "city": [
          {
            "cityname": "太原",
            "code": "101100101"
          }, {
            "cityname": "临汾",
            "code": "101100701"
          }, {
            "cityname": "运城",
            "code": "101100801"
          }, {
            "cityname": "朔州",
            "code": "101100901"
          }, {
            "cityname": "忻州",
            "code": "101101001"
          }, {
            "cityname": "长治",
            "code": "101100501"
          }, {
            "cityname": "大同",
            "code": "101100201"
          }, {
            "cityname": "阳泉",
            "code": "101100301"
          }, {
            "cityname": "晋中",
            "code": "101100401"
          }, {
            "cityname": "晋城",
            "code": "101100601"
          }, {
            "cityname": "吕梁",
            "code": "101101100"
          }
        ]
      }, {
        "prov": "新疆",
        "city": [
          {
            "cityname": "乌鲁木齐",
            "code": "101130101"
          }, {
            "cityname": "石河子",
            "code": "101130301"
          }, {
            "cityname": "昌吉",
            "code": "101130401"
          }, {
            "cityname": "吐鲁番",
            "code": "101130501"
          }, {
            "cityname": "库尔勒",
            "code": "101130601"
          }, {
            "cityname": "阿拉尔",
            "code": "101130701"
          }, {
            "cityname": "阿克苏",
            "code": "101130801"
          }, {
            "cityname": "喀什",
            "code": "101130901"
          }, {
            "cityname": "伊宁",
            "code": "101131001"
          }, {
            "cityname": "塔城",
            "code": "101131101"
          }, {
            "cityname": "哈密",
            "code": "101131201"
          }, {
            "cityname": "和田",
            "code": "101131301"
          }, {
            "cityname": "阿勒泰",
            "code": "101131401"
          }, {
            "cityname": "阿图什",
            "code": "101131501"
          }, {
            "cityname": "博乐",
            "code": "101131601"
          }, {
            "cityname": "克拉玛依",
            "code": "101130201"
          }
        ]
      }, {
        "prov": "西藏",
        "city": [
          {
            "cityname": "拉萨",
            "code": "101140101"
          }, {
            "cityname": "山南",
            "code": "101140301"
          }, {
            "cityname": "阿里",
            "code": "101140701"
          }, {
            "cityname": "昌都",
            "code": "101140501"
          }, {
            "cityname": "那曲",
            "code": "101140601"
          }, {
            "cityname": "日喀则",
            "code": "101140201"
          }, {
            "cityname": "林芝",
            "code": "101140401"
          }
        ]
      }, {
        "prov": "台湾",
        "city": [
          {
            "cityname": "台北县",
            "code": "101340101"
          }, {
            "cityname": "高雄",
            "code": "101340201"
          }, {
            "cityname": "台中",
            "code": "101340401"
          }
        ]
      }, {
        "prov": "海南prov",
        "city": [
          {
            "cityname": "海口",
            "code": "101310101"
          }, {
            "cityname": "三亚",
            "code": "101310201"
          }, {
            "cityname": "东方",
            "code": "101310202"
          }, {
            "cityname": "临高",
            "code": "101310203"
          }, {
            "cityname": "澄迈",
            "code": "101310204"
          }, {
            "cityname": "儋州",
            "code": "101310205"
          }, {
            "cityname": "昌江",
            "code": "101310206"
          }, {
            "cityname": "白沙",
            "code": "101310207"
          }, {
            "cityname": "琼中",
            "code": "101310208"
          }, {
            "cityname": "定安",
            "code": "101310209"
          }, {
            "cityname": "屯昌",
            "code": "101310210"
          }, {
            "cityname": "琼海",
            "code": "101310211"
          }, {
            "cityname": "文昌",
            "code": "101310212"
          }, {
            "cityname": "保亭",
            "code": "101310214"
          }, {
            "cityname": "万宁",
            "code": "101310215"
          }, {
            "cityname": "陵水",
            "code": "101310216"
          }, {
            "cityname": "西沙",
            "code": "101310217"
          }, {
            "cityname": "南沙岛",
            "code": "101310220"
          }, {
            "cityname": "乐东",
            "code": "101310221"
          }, {
            "cityname": "五指山",
            "code": "101310222"
          }, {
            "cityname": "琼山",
            "code": "101310102"
          }
        ]
      }, {
        "prov": "湖南",
        "city": [
          {
            "cityname": "长沙",
            "code": "101250101"
          }, {
            "cityname": "株洲",
            "code": "101250301"
          }, {
            "cityname": "衡阳",
            "code": "101250401"
          }, {
            "cityname": "郴州",
            "code": "101250501"
          }, {
            "cityname": "常德",
            "code": "101250601"
          }, {
            "cityname": "益阳",
            "code": "101250700"
          }, {
            "cityname": "娄底",
            "code": "101250801"
          }, {
            "cityname": "邵阳",
            "code": "101250901"
          }, {
            "cityname": "岳阳",
            "code": "101251001"
          }, {
            "cityname": "张家界",
            "code": "101251101"
          }, {
            "cityname": "怀化",
            "code": "101251201"
          }, {
            "cityname": "黔阳",
            "code": "101251301"
          }, {
            "cityname": "永州",
            "code": "101251401"
          }, {
            "cityname": "吉首",
            "code": "101251501"
          }, {
            "cityname": "湘潭",
            "code": "101250201"
          }
        ]
      }, {
        "prov": "江苏",
        "city": [
          {
            "cityname": "南京",
            "code": "101190101"
          }, {
            "cityname": "镇江",
            "code": "101190301"
          }, {
            "cityname": "苏州",
            "code": "101190401"
          }, {
            "cityname": "南通",
            "code": "101190501"
          }, {
            "cityname": "扬州",
            "code": "101190601"
          }, {
            "cityname": "宿迁",
            "code": "101191301"
          }, {
            "cityname": "徐州",
            "code": "101190801"
          }, {
            "cityname": "淮安",
            "code": "101190901"
          }, {
            "cityname": "连云港",
            "code": "101191001"
          }, {
            "cityname": "常州",
            "code": "101191101"
          }, {
            "cityname": "泰州",
            "code": "101191201"
          }, {
            "cityname": "无锡",
            "code": "101190201"
          }, {
            "cityname": "盐城",
            "code": "101190701"
          }
        ]
      }, {
        "prov": "黑龙江",
        "city": [
          {
            "cityname": "哈尔滨",
            "code": "101050101"
          }, {
            "cityname": "牡丹江",
            "code": "101050301"
          }, {
            "cityname": "佳木斯",
            "code": "101050401"
          }, {
            "cityname": "绥化",
            "code": "101050501"
          }, {
            "cityname": "黑河",
            "code": "101050601"
          }, {
            "cityname": "双鸭山",
            "code": "101051301"
          }, {
            "cityname": "伊春",
            "code": "101050801"
          }, {
            "cityname": "大庆",
            "code": "101050901"
          }, {
            "cityname": "七台河",
            "code": "101051002"
          }, {
            "cityname": "鸡西",
            "code": "101051101"
          }, {
            "cityname": "鹤岗",
            "code": "101051201"
          }, {
            "cityname": "齐齐哈尔",
            "code": "101050201"
          }, {
            "cityname": "大兴安岭",
            "code": "101050701"
          }
        ]
      }, {
        "prov": "吉林",
        "city": [
          {
            "cityname": "长春",
            "code": "101060101"
          }, {
            "cityname": "延吉",
            "code": "101060301"
          }, {
            "cityname": "四平",
            "code": "101060401"
          }, {
            "cityname": "白山",
            "code": "101060901"
          }, {
            "cityname": "白城",
            "code": "101060601"
          }, {
            "cityname": "辽源",
            "code": "101060701"
          }, {
            "cityname": "松原",
            "code": "101060801"
          }, {
            "cityname": "吉林",
            "code": "101060201"
          }, {
            "cityname": "通化",
            "code": "101060501"
          }
        ]
      }, {
        "prov": "辽宁",
        "city": [
          {
            "cityname": "沈阳",
            "code": "101070101"
          }, {
            "cityname": "鞍山",
            "code": "101070301"
          }, {
            "cityname": "抚顺",
            "code": "101070401"
          }, {
            "cityname": "本溪",
            "code": "101070501"
          }, {
            "cityname": "丹东",
            "code": "101070601"
          }, {
            "cityname": "葫芦岛",
            "code": "101071401"
          }, {
            "cityname": "营口",
            "code": "101070801"
          }, {
            "cityname": "阜新",
            "code": "101070901"
          }, {
            "cityname": "辽阳",
            "code": "101071001"
          }, {
            "cityname": "铁岭",
            "code": "101071101"
          }, {
            "cityname": "朝阳",
            "code": "101071201"
          }, {
            "cityname": "盘锦",
            "code": "101071301"
          }, {
            "cityname": "大连",
            "code": "101070201"
          }, {
            "cityname": "锦州",
            "code": "101070701"
          }
        ]
      }
    ]
  };

  WeatherData = (function() {
    function WeatherData(cityid) {
      if (cityid) {
        this.cityid = cityid;
        this.url_nowweather_str = "http://www.weather.com.cn/data/sk/" + cityid + ".html";
        this.url_moreweather_str = "http://m.weather.com.cn/data/" + cityid + ".html";
      }
    }

    WeatherData.prototype.Get_weatherdata_now = function(callback, cityid) {
      var _this = this;

      if (cityid == null) {
        cityid = this.cityid;
      }
      if (cityid < 1000) {
        cityid = 0;
        localStorage.setItem("cityid_storage", cityid);
      }
      if (cityid) {
        return ajax(this.url_nowweather_str, function(xhr) {
          var e;

          try {
            localStorage.setItem("weatherdata_now_storage", xhr.responseText);
            return callback();
          } catch (_error) {
            e = _error;
            return echo("weatherdata_now xhr.responseText isnt JSON ");
          }
        });
      }
    };

    WeatherData.prototype.Get_weatherdata_more = function(callback, cityid) {
      var _this = this;

      if (cityid == null) {
        cityid = this.cityid;
      }
      if (cityid < 1000) {
        cityid = 0;
        localStorage.setItem("cityid_storage", cityid);
      }
      if (cityid) {
        return ajax(this.url_moreweather_str, function(xhr) {
          var e;

          try {
            localStorage.setItem("weatherdata_more_storage", xhr.responseText);
            return callback();
          } catch (_error) {
            e = _error;
            return echo("weatherdata_more xhr.responseText isnt JSON ");
          }
        });
      }
    };

    WeatherData.prototype.weather_more_img_front = function() {
      var img_front, weather_data_more;

      weather_data_more = localStorage.getObject("weatherdata_more_storage");
      img_front = [weather_data_more.weatherinfo.img_single, weather_data_more.weatherinfo.img1, weather_data_more.weatherinfo.img2, weather_data_more.weatherinfo.img3, weather_data_more.weatherinfo.img4, weather_data_more.weatherinfo.img5, weather_data_more.weatherinfo.img6, weather_data_more.weatherinfo.img7, weather_data_more.weatherinfo.img8, weather_data_more.weatherinfo.img9, weather_data_more.weatherinfo.img10, weather_data_more.weatherinfo.img11, weather_data_more.weatherinfo.img12];
      return img_front;
    };

    WeatherData.prototype.weather_more_img_behind = function() {
      var img_behind, weather_data_more;

      weather_data_more = localStorage.getObject("weatherdata_more_storage");
      img_behind = [weather_data_more.weatherinfo.img_title_single, weather_data_more.weatherinfo.img_title1, weather_data_more.weatherinfo.img_title2, weather_data_more.weatherinfo.img_title3, weather_data_more.weatherinfo.img_title4, weather_data_more.weatherinfo.img_title5, weather_data_more.weatherinfo.img_title6, weather_data_more.weatherinfo.img_title7, weather_data_more.weatherinfo.img_title8, weather_data_more.weatherinfo.img_title9, weather_data_more.weatherinfo.img_title10, weather_data_more.weatherinfo.img_title11, weather_data_more.weatherinfo.img_title12];
      return img_behind;
    };

    WeatherData.prototype.weather_more_week = function() {
      var i_week, weather_data_more, week_name;

      i_week = 0;
      week_name = ["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"];
      weather_data_more = localStorage.getObject("weatherdata_more_storage");
      while (i_week < week_name.length) {
        if (weather_data_more.weatherinfo.week === week_name[i_week]) {
          break;
        }
        i_week++;
      }
      return i_week;
    };

    return WeatherData;

  })();

  ClientCityId = (function() {
    function ClientCityId() {
      this.url_clientcity_json = "http://int.dpool.sina.com.cn/iplookup/iplookup.php?format=js&ip=";
    }

    ClientCityId.prototype.Get_client_cityid = function(callback) {
      var _this = this;

      return ajax(this.url_clientcity_json, function(xhr) {
        var ci, cityid_client, cityname_client, client_cityjsonstr, e, provin, remote_ip_info, _results;

        try {
          client_cityjsonstr = xhr.responseText;
          remote_ip_info = JSON.parse(client_cityjsonstr.slice(21, client_cityjsonstr.length));
          if (remote_ip_info.ret === 1) {
            _results = [];
            for (provin in allname.data) {
              if (allname.data[provin].prov === remote_ip_info.province) {
                _results.push((function() {
                  var _results1;

                  _results1 = [];
                  for (ci in allname.data[provin].city) {
                    if (allname.data[provin].city[ci].cityname === remote_ip_info.city) {
                      cityname_client = remote_ip_info.city;
                      localStorage.setItem("cityname_client_storage", cityname_client);
                      cityid_client = allname.data[provin].city[ci].code;
                      localStorage.setItem("cityid_storage", cityid_client);
                      _results1.push(callback());
                    } else {
                      _results1.push(void 0);
                    }
                  }
                  return _results1;
                })());
              } else {
                _results.push(void 0);
              }
            }
            return _results;
          } else {
            echo("Get_client_cityid can't find the matched location right json by ip");
            return 0;
          }
        } catch (_error) {
          e = _error;
          return echo("Get_client_cityid error");
        }
      });
    };

    return ClientCityId;

  })();

  CityMoreMenu = (function(_super) {
    var BOTTOM_DISTANCE_CHOOSECITY_MINI, BOTTOM_DISTANCE_COMMONCITY_MINI, COMMON_MENU_WIDTH_MINI, times_dist_choose;

    __extends(CityMoreMenu, _super);

    COMMON_MENU_WIDTH_MINI = 70;

    BOTTOM_DISTANCE_CHOOSECITY_MINI = 200;

    BOTTOM_DISTANCE_COMMONCITY_MINI = 200;

    times_dist_choose = 0;

    function CityMoreMenu(zIndex) {
      var common;

      CityMoreMenu.__super__.constructor.call(this, null);
      this.element.style.display = "none";
      this.element.style.zIndex = zIndex;
      common = localStorage.getObject("common_dists_storage");
      common_dists = !common ? common_dists_init : common;
      localStorage.setObject("common_dists_storage", common_dists);
    }

    CityMoreMenu.prototype.display_none = function() {
      return this.element.style.display = "none";
    };

    CityMoreMenu.prototype.display_block = function() {
      return this.element.style.display = "block";
    };

    CityMoreMenu.prototype.display_check = function() {
      return this.element.style.display;
    };

    CityMoreMenu.prototype.zIndex_check = function() {
      return this.element.style.zIndex;
    };

    CityMoreMenu.prototype.set_menu_position = function(obj, bottom_distance, x1, y1, x2, y2, show) {
      var height;

      if (show == null) {
        show = "block";
      }
      obj.style.display = "block";
      height = obj.clientHeight;
      obj.style.display = "none";
      if (bottom_distance < height) {
        obj.style.left = x2;
        obj.style.bottom = y2;
      } else {
        obj.style.left = x1;
        obj.style.top = y1;
      }
      return obj.style.display = show;
    };

    CityMoreMenu.prototype.common_city_build = function(bottom_distance, x1, y1, x2, y2, callback) {
      this.element.style.display = "block";
      if (this.lable_choose) {
        this.lable_choose.style.display = "none";
      }
      if (this.common_menu) {
        remove_element(this.common_menu);
      }
      this.common_menu = create_element("div", "common_menu", this.element);
      this.common_menu.style.display = "none";
      common_dists = localStorage.getObject("common_dists_storage");
      this.common_city(common_dists, callback);
      this.add_common();
      return this.set_menu_position(this.common_menu, bottom_distance, x1, y1, x2, y2, "block");
    };

    CityMoreMenu.prototype.common_city = function(common_dists, callback) {
      var common_city, common_city_text, i, id_tmp, length, minus, that, _results;

      if (common_dists) {
        common_city = [];
        common_city_text = [];
        minus = [];
        id_tmp = [];
        length = common_dists.length;
        i = 0;
        _results = [];
        while (i < length) {
          if (common_dists[i].name && common_dists[i].id) {
            common_city[i] = create_element("div", "common_city", this.common_menu);
            common_city[i].value = common_dists[i].name;
            common_city_text[i] = create_element("div", "common_city_text", common_city[i]);
            common_city_text[i].innerText = common_dists[i].name;
            common_city_text[i].value = common_dists[i].id;
            minus[i] = create_element("div", "minus", common_city[i]);
            minus[i].innerText = "-";
            minus[i].value = common_dists[i].id;
            that = this;
            common_city_text[i].addEventListener("click", function() {
              that.element.style.display = "none";
              localStorage.setItem("cityid_storage", this.value);
              that = null;
              return callback();
            });
            minus[i].addEventListener("click", function() {
              var id, name, times, tmp, _i, _len;

              name = this.parentElement.value;
              id = this.value;
              remove_element(this.parentElement);
              for (i = _i = 0, _len = common_dists.length; _i < _len; i = ++_i) {
                tmp = common_dists[i];
                if (id === tmp.id) {
                  common_dists[i].name = "";
                  common_dists[i].id = "";
                  localStorage.setObject("common_dists_storage", common_dists);
                  break;
                }
              }
              times = localStorage.getObject("times_dist_choose_storage");
              if (times > 0) {
                times--;
              }
              return localStorage.setObject("times_dist_choose_storage", times);
            });
          }
          _results.push(i++);
        }
        return _results;
      }
    };

    CityMoreMenu.prototype.add_common = function() {
      var plus;

      this.add_common_city = create_element("div", "add_common_city", this.common_menu);
      plus = create_element("div", "plus", this.add_common_city);
      return plus.innerText = "+";
    };

    CityMoreMenu.prototype.more_city_build = function(selectsize, bottom_distance, x1, y1, x2, y2, callback) {
      var _this = this;

      return this.add_common_city.addEventListener("click", function() {
        _this.common_menu.style.display = "none";
        _this.more_city_create(selectsize);
        _this.set_menu_position(_this.lable_choose, bottom_distance, x1, y1, x2, y2, "block");
        return _this.change_chooseprov(callback);
      });
    };

    CityMoreMenu.prototype.more_city_create = function(selectsize) {
      var choose, city, cityinit, dist, distinit, i, prov, provinit;

      this.selectsize = selectsize;
      if (this.lable_choose) {
        remove_element(this.lable_choose);
      }
      if (choose) {
        remove_element(choose);
      }
      if (prov) {
        remove_element(prov);
      }
      if (city) {
        remove_element(city);
      }
      if (dist) {
        remove_element(dist);
      }
      if (this.chooseprov) {
        remove_element(this.chooseprov);
      }
      if (this.choosecity) {
        remove_element(this.choosecity);
      }
      if (this.choosedist) {
        remove_element(this.choosedist);
      }
      this.lable_choose = create_element("div", "lable_choose", this.element);
      this.lable_choose.style.display = "none";
      choose = create_element("div", "choose", this.lable_choose);
      this.str_provinit = "-" + _("province") + "-";
      this.str_cityinit = "-" + _("city") + "-";
      this.str_distinit = "-" + _("county") + "-";
      prov = create_element("div", "prov", choose);
      city = create_element("div", "city", choose);
      dist = create_element("div", "dist", choose);
      this.chooseprov = create_element("select", "chooseprov", prov);
      this.choosecity = create_element("select", "choosecity", city);
      this.choosedist = create_element("select", "choosedist", dist);
      this.clearOptions(this.chooseprov, 0);
      provinit = create_element("option", "provinit", this.chooseprov);
      provinit.innerText = this.str_provinit;
      provinit.selected = "false";
      i = 0;
      while (i < cities.length) {
        this.chooseprov.options.add(new Option(cities[i].name, cities[i++].id));
      }
      this.setMaxSize(this.chooseprov);
      this.clearOptions(this.choosecity, 0);
      cityinit = create_element("option", "cityinit", this.choosecity);
      cityinit.innerText = this.str_cityinit;
      cityinit.style.textAlign = "center";
      cityinit.selected = "false";
      this.clearOptions(this.choosedist, 0);
      distinit = create_element("option", "distinit", this.choosedist);
      distinit.innerText = this.str_distinit;
      return distinit.selected = "false";
    };

    CityMoreMenu.prototype.change_chooseprov = function(callback) {
      var _this = this;

      return this.chooseprov.addEventListener("change", function() {
        var data, provvalue;

        _this.provIndex = _this.chooseprov.selectedIndex;
        if (_this.provIndex === -1) {
          return _this.chooseprov.options.remove(_this.provIndex);
        } else {
          provvalue = _this.chooseprov.options[_this.provIndex].value;
          if (provvalue !== _this.str_provinit) {
            return data = _this.read_data_from_json(provvalue, callback);
          }
        }
      });
    };

    CityMoreMenu.prototype.read_data_from_json = function(id, callback) {
      var url,
        _this = this;

      url = ("" + plugin.path + "/city/") + id + ".json";
      return ajax(url, function(xhr) {
        var data;

        if (xhr.responseText) {
          data = JSON.parse(xhr.responseText);
          return _this.cityadd(data[id].data, callback);
        }
      });
    };

    CityMoreMenu.prototype.cityadd = function(data, callback) {
      var _this = this;

      this.clearOptions(this.choosecity, 1);
      this.create_option(this.choosecity, data);
      this.setMaxSize(this.choosecity);
      return this.choosecity.onchange = function() {
        var cityIndex, cityvalue;

        cityIndex = _this.choosecity.selectedIndex;
        if (cityIndex === -1) {
          return _this.choosecity.options.remove(cityIndex);
        } else {
          cityvalue = _this.choosecity.options[cityIndex].value;
          if (cityvalue !== _this.str_cityinit) {
            return _this.distadd(data[cityvalue].data, callback);
          }
        }
      };
    };

    CityMoreMenu.prototype.distadd = function(data, callback) {
      var _this = this;

      this.clearOptions(this.choosedist, 1);
      this.create_option(this.choosedist, data);
      this.setMaxSize(this.choosedist);
      return this.choosedist.onchange = function() {
        var common, distIndex, distvalue, i, times, tmp, _i, _len;

        clearInterval(_this.auto_update_cityid_choose);
        _this.element.style.display = "none";
        distIndex = _this.choosedist.selectedIndex;
        if (distIndex === -1) {
          return _this.choosedist.options.remove(distIndex);
        } else {
          distvalue = _this.choosedist.options[distIndex].value;
          if (distvalue !== _this.str_distinit) {
            localStorage.setItem("cityid_storage", data[distvalue].data);
            callback();
            common = localStorage.getObject("common_dists_storage");
            common_dists = !common ? common_dists_init : common;
            for (i = _i = 0, _len = common_dists.length; _i < _len; i = ++_i) {
              tmp = common_dists[i];
              if (data[distvalue].data === tmp.id) {
                return;
              }
            }
            times = localStorage.getObject("times_dist_choose_storage");
            times_dist_choose = !times ? 0 : times;
            common_dists[times_dist_choose].name = data[distvalue].name;
            common_dists[times_dist_choose].id = data[distvalue].data;
            localStorage.setObject("common_dists_storage", common_dists);
            times_dist_choose++;
            if (times_dist_choose > 4) {
              times_dist_choose = 0;
            }
            return localStorage.setItem("times_dist_choose_storage", times_dist_choose);
          }
        }
      };
    };

    CityMoreMenu.prototype.clearOptions = function(colls, first) {
      var i;

      if (first == null) {
        first = 0;
      }
      i = first;
      return colls.options.length = i;
    };

    CityMoreMenu.prototype.setMaxSize = function(obj, val) {
      if (val == null) {
        val = this.selectsize;
      }
      return obj.size = val;
    };

    CityMoreMenu.prototype.create_option = function(obj, data) {
      var i, _results;

      _results = [];
      for (i in data) {
        _results.push(obj.options.add(new Option(data[i].name, i)));
      }
      return _results;
    };

    return CityMoreMenu;

  })(Widget);

  _ = function(s) {
    return DCore.dgettext('weather', s);
  };

  Weather = (function(_super) {
    var BOTTOM_COMMON_CITY_MENU2, BOTTOM_DISTANCE_MINI, BOTTOM_MORE_CITY_MENU2, LEFT_COMMON_CITY_MENU1, LEFT_COMMON_CITY_MENU2, LEFT_MORE_CITY_MENU1, LEFT_MORE_CITY_MENU2, SELECT_SIZE, TOP_COMMON_CITY_MENU1, TOP_MORE_CITY_MENU1, TOP_MORE_WEATHER_MENU1, TOP_MORE_WEATHER_MENU2, ZINDEX_DOWNEST, ZINDEX_GLOBAL_DESKTOP, ZINDEX_MENU, testInternet_url;

    __extends(Weather, _super);

    ZINDEX_MENU = 5001;

    ZINDEX_GLOBAL_DESKTOP = 5000;

    ZINDEX_DOWNEST = 0;

    BOTTOM_DISTANCE_MINI = 215;

    TOP_MORE_WEATHER_MENU1 = 91;

    TOP_MORE_WEATHER_MENU2 = -191;

    LEFT_COMMON_CITY_MENU1 = 160;

    TOP_COMMON_CITY_MENU1 = 57;

    LEFT_COMMON_CITY_MENU2 = 160;

    BOTTOM_COMMON_CITY_MENU2 = -35;

    LEFT_MORE_CITY_MENU1 = 10;

    TOP_MORE_CITY_MENU1 = 90;

    LEFT_MORE_CITY_MENU2 = 10;

    BOTTOM_MORE_CITY_MENU2 = -22;

    SELECT_SIZE = 13;

    testInternet_url = "http://www.weather.com.cn/data/sk/101010100.html";

    function Weather() {
      this.testInternet_noconnect = __bind(this.testInternet_noconnect, this);
      this.testInternet_connect = __bind(this.testInternet_connect, this);      Weather.__super__.constructor.call(this, null);
      this.weather_style_build();
      this.more_weather_build();
      ajax(testInternet_url, this.testInternet_connect(), this.testInternet_noconnect);
    }

    Weather.prototype.testInternet_connect = function() {
      var Clientcityid, cityid;

      if (localStorage.getObject("cityid_storage")) {
        cityid = localStorage.getObject("cityid_storage");
      }
      if (cityid < 1000) {
        cityid = 0;
        localStorage.setItem("cityid_storage", cityid);
      }
      if (!cityid) {
        Clientcityid = new ClientCityId();
        return Clientcityid.Get_client_cityid(this.weathergui_update.bind(this));
      } else {
        return this.weathergui_update();
      }
    };

    Weather.prototype.testInternet_noconnect = function() {
      var weather_data_more, weather_data_now;

      this.weatherdata = new WeatherData();
      weather_data_now = localStorage.getObject("weatherdata_now_storage");
      if (weather_data_now) {
        this.update_weathernow(weather_data_now);
      }
      weather_data_more = localStorage.getObject("weatherdata_more_storage");
      if (weather_data_more) {
        return this.update_weathermore(weather_data_more);
      }
    };

    Weather.prototype.do_buildmenu = function() {
      return [];
    };

    Weather.prototype.weather_style_build = function() {
      var city, city_and_date, img_now_url_init, left_div, right_div, temp_now_init, temperature_now,
        _this = this;

      this.img_url_first = "" + plugin.path + "/img/";
      img_now_url_init = this.img_url_first + "48/T" + "0\u6674" + ".png";
      temp_now_init = "00";
      left_div = create_element("div", "left_div", this.element);
      this.weather_now_pic = create_img("weather_now_pic", img_now_url_init, left_div);
      right_div = create_element("div", "right_div", this.element);
      temperature_now = create_element("div", "temperature_now", right_div);
      this.temperature_now_minus = create_element("div", "temperature_now_minus", temperature_now);
      this.temperature_now_minus.textContent = "-";
      this.temperature_now_number = create_element("div", "temperature_now_number", temperature_now);
      this.temperature_now_number.textContent = temp_now_init;
      city_and_date = create_element("div", "city_and_date", right_div);
      city = create_element("div", "city", city_and_date);
      this.city_now = create_element("div", "city_now", city);
      this.city_now.textContent = _("choose city");
      this.more_city_img = create_img("more_city_img", this.img_url_first + "ar.png", city);
      this.date = create_element("div", "date", city_and_date);
      this.date.textContent = _("loading") + "..........";
      this.more_city_menu = new CityMoreMenu(ZINDEX_MENU);
      this.element.appendChild(this.more_city_menu.element);
      this.global_desktop = create_element("div", "global_desktop", this.element);
      this.global_desktop.style.height = window.screen.height;
      this.global_desktop.style.width = window.screen.width;
      this.global_desktop.style.zIndex = ZINDEX_GLOBAL_DESKTOP;
      city.addEventListener("click", function() {
        var bottom_distance;

        _this.more_weather_menu.style.display = "none";
        if (_this.more_city_menu.display_check() === "none") {
          _this.global_desktop.style.display = "block";
        } else {
          _this.global_desktop.style.display = "none";
        }
        bottom_distance = window.screen.availHeight - _this.element.getBoundingClientRect().bottom;
        _this.more_city_menu.common_city_build(bottom_distance, LEFT_COMMON_CITY_MENU1, TOP_COMMON_CITY_MENU1, LEFT_COMMON_CITY_MENU2, BOTTOM_COMMON_CITY_MENU2, _this.weathergui_update.bind(_this));
        return _this.more_city_menu.more_city_build(SELECT_SIZE, bottom_distance, LEFT_MORE_CITY_MENU1, TOP_MORE_CITY_MENU1, LEFT_MORE_CITY_MENU2, BOTTOM_MORE_CITY_MENU2, _this.weathergui_update.bind(_this));
      });
      this.date.addEventListener("click", function() {
        var bottom_distance;

        _this.more_city_menu.display_none();
        if (_this.more_weather_menu.style.display === "none") {
          _this.global_desktop.style.display = "block";
          bottom_distance = window.screen.availHeight - _this.element.getBoundingClientRect().bottom;
          return _this.set_menu_position(_this.more_weather_menu, bottom_distance, TOP_MORE_WEATHER_MENU1, TOP_MORE_WEATHER_MENU2, "block");
        } else {
          _this.global_desktop.style.display = "none";
          return _this.more_weather_menu.style.display = "none";
        }
      });
      return this.global_desktop.addEventListener("click", function() {
        _this.more_weather_menu.style.display = "none";
        _this.more_city_menu.display_none();
        return _this.global_desktop.style.display = "none";
      });
    };

    Weather.prototype.set_menu_position = function(obj, bottom_distance, y1, y2, show) {
      var height;

      if (show == null) {
        show = "block";
      }
      obj.style.display = "block";
      height = obj.clientHeight;
      obj.style.display = "none";
      if (bottom_distance < height) {
        obj.style.top = y2;
        obj.style.borderRadius = "6px 6px 0 0";
      } else {
        obj.style.top = y1;
        obj.style.borderRadius = "0 0 6px 6px";
      }
      return obj.style.display = show;
    };

    Weather.prototype.more_weather_build = function() {
      var i, img_more_url_init, img_now_url_init, temp_init, week_init, _i, _results;

      img_now_url_init = this.img_url_first + "48/T" + "0\u6674" + ".png";
      img_more_url_init = this.img_url_first + "24/T" + "0\u6674" + ".png";
      week_init = _("Sun");
      temp_init = "00℃~00℃";
      this.more_weather_menu = create_element("div", "more_weather_menu", this.element);
      this.more_weather_menu.style.display = "none";
      this.weather_data = [];
      this.week = [];
      this.pic = [];
      this.temperature = [];
      _results = [];
      for (i = _i = 0; _i < 6; i = ++_i) {
        this.weather_data[i] = create_element("div", "weather_data", this.more_weather_menu);
        this.week[i] = create_element("a", "week", this.weather_data[i]);
        this.week[i].textContent = week_init;
        this.pic[i] = create_img("pic", img_more_url_init, this.weather_data[i]);
        this.temperature[i] = create_element("a", "temperature", this.weather_data[i]);
        _results.push(this.temperature[i].textContent = temp_init);
      }
      return _results;
    };

    Weather.prototype.lost_focus = function() {
      this.more_weather_menu.style.display = "none";
      this.more_city_menu.display_none();
      return this.global_desktop.style.display = "none";
    };

    Weather.prototype.weathergui_update = function() {
      var cityid;

      this.global_desktop.style.display = "none";
      cityid = localStorage.getObject("cityid_storage");
      clearInterval(this.auto_weathergui_refresh);
      return this.auto_weathergui_refresh = setInterval(this.weathergui_refresh(cityid), 600000);
    };

    Weather.prototype.weathergui_refresh = function(cityid) {
      var callback_more, callback_now;

      callback_now = function() {
        var weather_data_now;

        weather_data_now = localStorage.getObject("weatherdata_now_storage");
        return this.update_weathernow(weather_data_now);
      };
      callback_more = function() {
        var weather_data_more;

        weather_data_more = localStorage.getObject("weatherdata_more_storage");
        return this.update_weathermore(weather_data_more);
      };
      if (cityid < 1000) {
        cityid = 0;
        localStorage.setItem("cityid_storage", cityid);
      }
      if (cityid) {
        this.weatherdata = new WeatherData(cityid);
        this.weatherdata.Get_weatherdata_now(callback_now.bind(this));
        return this.weatherdata.Get_weatherdata_more(callback_more.bind(this));
      } else {
        return echo("cityid isnt ready");
      }
    };

    Weather.prototype.update_weathernow = function(weather_data_now) {
      var temp_now;

      temp_now = weather_data_now.weatherinfo.temp;
      this.time_update = weather_data_now.weatherinfo.time;
      this.city_now.textContent = weather_data_now.weatherinfo.city;
      if (temp_now === "\u6682\u65e0\u5b9e\u51b5") {
        this.temperature_now_number.style.fontSize = 18;
        return this.temperature_now_number.textContent = _("None");
      } else {
        this.temperature_now_number.style.fontSize = 36;
        if (temp_now < -10) {
          this.temperature_now_minus.style.opacity = 0.8;
          return this.temperature_now_number.textContent = -temp_now;
        } else {
          this.temperature_now_minus.style.opacity = 0;
          return this.temperature_now_number.textContent = temp_now;
        }
      }
    };

    Weather.prototype.update_weathermore = function(weather_data_more) {
      var i, j, str_data, week_show, _i, _results;

      this.week_n = this.weatherdata.weather_more_week();
      this.img_front = this.weatherdata.weather_more_img_front();
      this.img_behind = this.weatherdata.weather_more_img_behind();
      week_show = [_("Sun"), _("Mon"), _("Tue"), _("Wed"), _("Thu"), _("Fri"), _("Sat")];
      str_data = weather_data_more.weatherinfo.date_y;
      this.date.textContent = str_data.substring(0, str_data.indexOf("\u5e74")) + "." + str_data.substring(str_data.indexOf("\u5e74") + 1, str_data.indexOf("\u6708")) + "." + str_data.substring(str_data.indexOf("\u6708") + 1, str_data.indexOf("\u65e5")) + " " + week_show[this.week_n % 7];
      this.weather_now_pic.src = this.img_url_first + "48/T" + weather_data_more.weatherinfo.img_single + weather_data_more.weatherinfo.img_title_single + ".png";
      this.weather_now_pic.title = weather_data_more.weatherinfo['weather' + 1];
      _results = [];
      for (i = _i = 0; _i < 6; i = ++_i) {
        j = i + 1;
        this.weather_data[i].title = weather_data_more.weatherinfo['weather' + j];
        this.week[i].textContent = week_show[(this.week_n + i) % 7];
        this.pic[i].src = this.weather_more_pic_src(j);
        _results.push(this.temperature[i].textContent = weather_data_more.weatherinfo['temp' + j]);
      }
      return _results;
    };

    Weather.prototype.weather_more_pic_src = function(i) {
      var hours_now, src, time;

      i = i * 2 - 1;
      src = null;
      time = new Date();
      hours_now = time.getHours();
      if (this.img_front[i + 1] === "99") {
        this.img_front[i + 1] = this.img_front[i];
      }
      if (hours_now < 12) {
        src = this.img_url_first + "24/T" + this.img_front[i] + this.img_behind[i] + ".png";
      } else {
        src = this.img_url_first + "24/T" + this.img_front[i + 1] + this.img_behind[i + 1] + ".png";
      }
      return src;
    };

    return Weather;

  })(Widget);

  plugin = PluginManager.get_plugin("weather");

  plugin.inject_css("weather");

  plugin.inject_css("citymoremenu");

  plugin.wrap_element(new Weather(plugin.id).element);

}).call(this);
